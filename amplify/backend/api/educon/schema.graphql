type MQCorrectList @model @auth(rules: [{allow: public}]) {
  id: ID!
  MQCorrectAnswers: [MQCorrectAnswer] @connection(keyName: "byMQCorrectList", fields: ["id"])
}

type MQCorrectAnswer @model @auth(rules: [{allow: public}]) @key(name: "byMQCorrectList", fields: ["mqcorrectlistID"]) {
  id: ID!
  Aindex: Int
  mqcorrectlistID: ID
}

type MQAnswer @model @auth(rules: [{allow: public}]) @key(name: "byMQuizAsnersList", fields: ["mquizasnerslistID"]) {
  id: ID!
  Answer: String
  mquizasnerslistID: ID
}

type MQuizAsnersList @model @auth(rules: [{allow: public}]) {
  id: ID!
  untitledfield: String
  MQAnswers: [MQAnswer] @connection(keyName: "byMQuizAsnersList", fields: ["id"])
}

enum QType {
  SINGLE
  MULTIPLE
}

type ClassStat @model @auth(rules: [{allow: public}]) @key(name: "byUserProfile", fields: ["userprofileID"]) {
  id: ID!
  Videos: Videos @connection
  userprofileID: ID
}

type UserProfile @model @auth(rules: [{allow: public}]) {
  id: ID!
  user_name: String
  user_email: AWSEmail
  top_score: String
  last_class: String
  ClassStats: [ClassStat] @connection(keyName: "byUserProfile", fields: ["id"])
}

type QuizOptions @model @auth(rules: [{allow: public}]) {
  id: ID!
  Opt1: String
  Opt2: String
  Opt3: String
  Opt4: String
  Answer: Int
  qtype: QType
  MQCorrectList: MQCorrectList @connection
  MQuizAsnersList: MQuizAsnersList @connection
}

type Quizes @model @auth(rules: [{allow: public}]) @key(name: "byVideos", fields: ["videosID"]) {
  id: ID!
  Question: String
  QuizOptions: QuizOptions @connection
  complexity: ID
  videosID: ID
}

type Notes @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
}

type Videos @model @auth(rules: [{allow: public}]) {
  id: ID!
  filename: String
  category: String
  Quizes: [Quizes] @connection(keyName: "byVideos", fields: ["id"])
  URL: String
}
 